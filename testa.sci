function y=testa(W)
   
//carrega o treinamento. 
load ('ANN_treina.sod', 'W', 'NeuralNetwork');
  
  //entrada dos valores de teste 
x=[
0	0	1	0	0	1	1	1	1	0	0	1	0 0 0	1	0	1	1 0 0	;
0	0	1	0	0	1	1	1	1	0	0	1	0 0 0	1	0	0	1 0 0	;
0	0	1	0	0	0	1	1	1	1	1	0	0 0 0	1	0	0	0 1 1	;
1	0	1	1	0	1	1	0	1	1	0	0	1 0 0	1	0	1	0 0 1	;
1	0	0	1	0	0	1	1	1	1	0	0	1 0 0	1	0	1	0 0 1	;
1	0	0	1	0	0	0	1	1	1	0	0	1 0 0	1	1	1	0 0 1	;
0	0	0	1	0	1	1	1	1	1	0	1	0 0 0	1	0	1	0 0 1	;
1	0	0	1	0	0	1	1	1	1	0	0	1 0 0	1	0	1	0 0 1	;
1	0	0	1	0	0	1	1	1	1	0	0	1 0 0	1	1	1	0 0 1	;
1	0	0	1	0	0	1	1	1	1	0	0	1 0 0	1	0	1	0 0 1	;
1	0	0	1	0	0	0	1	1	1	0	0	1 0 0	1	1	1	0 0 1	;
0	1	1	0	0	0	1	0	1	1	0	0	0 1 0	1	0	1	0 1 0	;
0	0	0	0	0	0	1	0	0	1	1	0	1 1 1	1	0	0	1 1 1	;
0	0	1	0	0	1	0	1	1	0	0	1	0 0 0	1	0	0	1 0 0	;
1	0	0	1	0	1	1	1	1	1	0	1	0 0 0	0	0	1	0 0 1	;
1	0	0	1	0	1	1	1	1	1	0	1	0 1 0	1	0	1	0 0 1	;
0	0	0	0	0	1	1	1	1	0	1	0	0 0 0	1	0	0	0 1 1	;
0	0	1	0	0	1	1	0	0	0	1	0	0 0 0	0	0	0	1 1 1	;
0	1	1	0	1	1	1	0	1	1	0	0	0 1 0	1	0	0	0 1 0	;
0	1	1	0	1	1	1	0	1	1	0	0	0 1 0	1	0	0	0 1 0	;
0	0	1	0	0	0	1	1	1	1	0	0	0 0 0	1	0	0	0 1 1	;
0	0	1	0	0	0	0	0	0	1	0	0	0 0 0	0	0	0	1 1 1	;
0	0	1	0	0	1	0	1	1	0	0	1	0 0 0	1	0	0	1 0 0	;
0	1	1	0	1	0	0	0	1	1	0	0	0 1 0	1	0	0	0 1 0	;
1	0	0	1	0	0	0	1	1	1	0	0	0 1 0	1	0	0	0 0 1	;
0	0	1	0	0	1	1	0	0	0	0	0	1 0 1	0	0	0	1 1 1	;
0	0	1	0	0	1	1	1	1	0	1	1	0 0 0	1	0	1	1 0 0	;
0	1	1	0	1	1	0	0	1	1	0	0	0 1 0	1	0	1	0 1 0	;
0	0	1	0	0	0	0	0	0	1	0	0	1 1 0	0	0	0	1 1 0	;
0	0	1	0	0	1	0	1	1	1	0	0	1 0 0	0	0	0	1 0 1	;
0	0	1	0	0	0	0	0	1	1	0	0	1 0 0	1	0	1	0 1 1	;
0	0	1	0	0	0	1	1	1	1	0	0	1 0 0	1	0	0	0 1 1	;
0	0	1	0	0	1	1	1	1	0	0	1	0 0 0	1	0	1	1 0 0	;
1	0	0	1	1	0	0	1	1	1	0	0	0 1 0	1	0	0	0 0 1	;
1	0	0	1	0	0	0	1	1	1	0	0	1 0 0	1	0	0	0 0 1	;
0	1	1	0	1	0	1	0	1	1	0	0	0 1 0	1	0	1	0 1 0	;
1	0	0	1	0	0	0	1	1	1	0	0	0 1 0	1	0	1	0 0 1	;
1	0	1	0	1	0	0	0	0	1	1	0	1 1 0	0	0	0	1 1 0	;
1	0	0	1	0	0	1	1	1	1	0	0	1 0 0	1	0	1	0 0 1	;
0	0	1	0	0	0	0	0	0	1	0	0	0 0 0	0	0	0	1 1 1	;
0	1	1	0	1	0	0	0	1	1	0	0	0 1 0	1	0	0	0 1 0	;
0	1	1	0	1	0	0	0	1	1	0	0	0 1 0	1	0	0	0 1 0
]';   

    disp(size(x));
       
    //Definindo arquitetura da rede
    
    disp(" .::::::::::::::: EXECUTANDO O TESTE ::::::::::::::::.");

cont1 = 0;
cont2 = 0;
cont3 = 0;
cont4 = 0;
cont5 = 0;
cont6 = 0;
cont7 = 0;
cont8 = 0;

    NeuralNetwork=[21 14 7];
    //executa a rede
    y = ann_FF_run(x,NeuralNetwork,W);
    y = round(y);//arredondando valores
    
    
    disp(y);
    
    [l,c]=size(y);
 
    for i=1:c
        if(y(1,i)==0 & y(2,i)==0 & y(3,i)==0 & y(4,i)==0 & y(5,i)==0 & y(6,i)==0 & y(7,i)==1)
            cont1 = cont1+1;
        elseif (y(1,i)==0 & y(2,i)==0 & y(3,i)==0 & y(4,i)==0 & y(5,i)==0 & y(6,i)==1 & y(7,i)==0)
            cont2 = cont2+1;
       elseif (y(1,i)==0 & y(2,i)==0 & y(3,i)==0 & y(4,i)==0 & y(5,i)==1 & y(6,i)==0 & y(7,i)==0)
            cont3 = cont3+1;  
        elseif (y(1,i)==0 & y(2,i)==0 & y(3,i)==0 & y(4,i)==1 & y(5,i)==0 & y(6,i)==0 & y(7,i)==0)
            cont4 = cont4+1; 
        elseif (y(1,i)==0 & y(2,i)==0 & y(3,i)==1 & y(4,i)==0 & y(5,i)==0 & y(6,i)==0 & y(7,i)==0)
            cont5 = cont5+1; 
        elseif (y(1,i)==0 & y(2,i)==1 & y(3,i)==0 & y(4,i)==0 & y(5,i)==0 & y(6,i)==0 & y(7,i)==0)
            cont6 = cont6+1; 
        elseif (y(1,i)==1 & y(2,i)==0 & y(3,i)==0 & y(4,i)==0 & y(5,i)==0 & y(6,i)==0 & y(7,i)==0)
            cont7 = cont7+1; 
             
        else
            //indefinido
            cont8 = cont8+1;
               
        end 
        
end
    
disp(".:: Classe 1");
disp(cont1);
disp(".:: classe 2");
disp(cont2);
disp(".:: Classe 3");
disp(cont3);
disp(".:: Classe 4");
disp(cont4);
disp(".:: Classe 5");
disp(cont5);
disp(".:: Classe 6");
disp(cont6);
disp(".:: Classe 7");
disp(cont7);
disp(".:: indefinida");
disp(cont8);    
    

endfunction
